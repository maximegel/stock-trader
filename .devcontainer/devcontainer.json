// Development container configuration,
// see https://code.visualstudio.com/docs/remote/devcontainerjson-reference
{
  "name": "K8s",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "BAZELISK_VERSION": "1.10.1",
      "BUILDIFIER_VERSION": "4.2.4",
      "CTLPTL_VERSION": "0.7.0",
      "HELM_VERSION": "latest",
      "KUBECTL_VERSION": "latest",
      "MINIKUBE_VERSION": "1.24.0",
      "TILT_VERSION": "0.23.5",
    }
  },
  "mounts": [
    "source=minikube-var-lib-docker,target=/var/lib/docker,type=volume",
    "source=minikube-config,target=/home/vscode/.minikube,type=volume",
  ],
  "runArgs": [
    "--privileged"
    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust. */
    // "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [],
  // Minikube does not like running as root, so use a non-root user.
  "remoteUser": "vscode",
  "overrideCommand": false,
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "bazelbuild.vscode-bazel",
    "eamodio.gitlens",
    "editorconfig.editorconfig",
    "golang.go",
    "mhutchie.git-graph",
    "ms-azuretools.vscode-docker",
    "ms-kubernetes-tools.vscode-kubernetes-tools",
    "pkief.material-icon-theme",
    "tilt-dev.tilt-status",
  ],
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "files.associations": {
      "*.tilt": "starlark",
      "Tiltfile": "starlark"
    },
    "terminal.integrated.defaultProfile.linux": "zsh",
    "bazel.buildifierExecutable": "/usr/local/bin/buildifier",
    "bazel.executable": "/usr/local/bin/bazel",
    "material-icon-theme.files.associations": {
      "*.tilt": "tilt",
      "devcluster.yaml": "tilt",
      "WORKSPACE": "bazel"
    },
    "material-icon-theme.folders.associations": {
      ".k8s": "kubernetes",
      "docker": false,
      "k8s": false
    },
  },
  "postCreateCommand": "zsh ./.devcontainer/lifecycle-scripts/post-create.sh",
  "postStartCommand": "zsh ./.devcontainer/lifecycle-scripts/post-start.sh",
}
