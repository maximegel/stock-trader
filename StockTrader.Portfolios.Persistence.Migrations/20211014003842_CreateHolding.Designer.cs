// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockTrader.Portfolios.Persistence;

namespace StockTrader.Portfolios.Persistence.Migrations
{
    [DbContext(typeof(PortfoliosSqlWriteContext))]
    [Migration("20211014003842_CreateHolding")]
    partial class CreateHolding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("portfolios_write")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockTrader.Portfolios.Persistence.Internal.HoldingData", b =>
                {
                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ShareCount")
                        .HasColumnType("int");

                    b.HasKey("PortfolioId", "Symbol");

                    b.ToTable("Holding");
                });

            modelBuilder.Entity("StockTrader.Portfolios.Persistence.Internal.PortfolioData", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("StockTrader.Portfolios.Persistence.Internal.HoldingData", b =>
                {
                    b.HasOne("StockTrader.Portfolios.Persistence.Internal.PortfolioData", "Portfolio")
                        .WithMany("Holdings")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("StockTrader.Portfolios.Persistence.Internal.PortfolioData", b =>
                {
                    b.Navigation("Holdings");
                });
#pragma warning restore 612, 618
        }
    }
}
